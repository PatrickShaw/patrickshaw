# Took some settings from:
# https://www.youtube.com/watch?v=aolI_Rz0ZqY
# Some notes: git maintenance start is great
# 

[user]
	email = mail@patrickshaw.me
	name = Patrick Shaw

[column]
  # Puts branches in columns
	ui = auto

[branch]
  # Last comitted at the bottom of list
  sort = committerdate

[push]
	autoSetupRemote = true

[init]
	templatedir = ~/.git-templates
	defaultBranch = main

[commit]
	gpgsign = false # true

[core]
    pager = delta
	# See: https://www.git-tower.com/blog/git-performance/
	# See: https://www.youtube.com/watch?v=aolI_Rz0ZqY
	# Actually decided to do this based on a GitHub blog post about it
    fsmonitor = true
	# See https://www.git-tower.com/blog/git-performance/
	# See: https://www.youtube.com/watch?v=aolI_Rz0ZqY
    untrackedcache = true
	# See: https://www.git-tower.com/blog/git-performance/
	# See: https://www.youtube.com/watch?v=aolI_Rz0ZqY
	commitgraph = true
		excludesfile = /Users/pshaw/.gitignore

[fetch]
  # See: https://www.git-tower.com/blog/git-performance/
	# Explained here: https://www.youtube.com/watch?v=aolI_Rz0ZqY
  writeCommitGraph = true
prune = true

[feature]
    # Optimises for lots of files
	# See: https://www.git-tower.com/blog/git-performance/
    manyFiles = true

[interactive]
    diffFilter = delta --color-only

[delta]
    navigate = true    # use n and N to move between diff sections
    light = false      # set to true if you're in a terminal w/ a light background color (e.g. the default macOS terminal)
    side-by-side = true
   
[merge]
    conflictstyle = diff3

[diff]
    colorMoved = dimmed-zebra
	# See: https://luppeng.wordpress.com/2020/10/10/when-to-use-each-of-the-git-diff-algorithms/
	algorithm = histogram

[rerere]
# Auto resolves conflicts if I specified how to resolve them before. Could be risky. Added in 2023-07-20. Will give it a go
# 2025-01-27 I don't think I've ran into any issues recently with bugs in my merging history. Not anymore than usual anyway. Keeping this
enabled = true
[filter "lfs"]
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true
	clean = git-lfs clean -- %f
[gpg]
	program = /run/current-system/sw/bin/gpg
[pull]
	rebase = false

[alias]
c = "commit -m"
f = "!$HOME/personal/code-snippets/git/fetch-important.sh"

# Fetch all
fa = "fetch"

rbo = "!git f && git rebase -i origin/main"

[trace2]
	eventTarget = /home/pshaw/.gittrace/dump
	configparams = custom.metacommands
	eventBrief = true
	maxFiles = 2000
